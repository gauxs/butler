// automatically generated by the FlatBuffers compiler, do not modify

package com.example.butlerkamaster.FlatbufferDefs.ResponseFood;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class app extends Table {
  public static app getRootAsapp(ByteBuffer _bb) { return getRootAsapp(_bb, new app()); }
  public static app getRootAsapp(ByteBuffer _bb, app obj) { Constants.FLATBUFFERS_1_11_1(); _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public app __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String appName() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer appNameAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer appNameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public cuisine cuisineList(int j) { return cuisineList(new cuisine(), j); }
  public cuisine cuisineList(cuisine obj, int j) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int cuisineListLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }

  public static int createapp(FlatBufferBuilder builder,
      int app_nameOffset,
      int cuisine_listOffset) {
    builder.startTable(2);
    app.addCuisineList(builder, cuisine_listOffset);
    app.addAppName(builder, app_nameOffset);
    return app.endapp(builder);
  }

  public static void startapp(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addAppName(FlatBufferBuilder builder, int appNameOffset) { builder.addOffset(0, appNameOffset, 0); }
  public static void addCuisineList(FlatBufferBuilder builder, int cuisineListOffset) { builder.addOffset(1, cuisineListOffset, 0); }
  public static int createCuisineListVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startCuisineListVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endapp(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
}

