// automatically generated by the FlatBuffers compiler, do not modify

package com.example.butlerkamaster.FlatbufferDefs.ResponseFood;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class cuisine extends Table {
  public static cuisine getRootAscuisine(ByteBuffer _bb) { return getRootAscuisine(_bb, new cuisine()); }
  public static cuisine getRootAscuisine(ByteBuffer _bb, cuisine obj) { Constants.FLATBUFFERS_1_11_1(); _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public cuisine __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String name() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer nameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public item itemList(int j) { return itemList(new item(), j); }
  public item itemList(item obj, int j) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int itemListLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }

  public static int createcuisine(FlatBufferBuilder builder,
      int nameOffset,
      int item_listOffset) {
    builder.startTable(2);
    cuisine.addItemList(builder, item_listOffset);
    cuisine.addName(builder, nameOffset);
    return cuisine.endcuisine(builder);
  }

  public static void startcuisine(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(0, nameOffset, 0); }
  public static void addItemList(FlatBufferBuilder builder, int itemListOffset) { builder.addOffset(1, itemListOffset, 0); }
  public static int createItemListVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startItemListVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endcuisine(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
}

